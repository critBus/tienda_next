// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  // provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Currency {
  id        Int     @id @default(autoincrement())
  name      String
  baseRate  Decimal @db.Decimal(12, 2)
  isDefault Boolean @default(false)
  isBase    Boolean @default(false)
  Price     Price[]
}

model Company {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Product {
  id                 Int      @id @default(autoincrement())
  name               String
  description        String
  priceBaseCurrency  Decimal  @db.Decimal(12, 2)
  originalPrice      Float
  stock              Int
  image              String
  discountPercentage Float?
  freeShipping       Boolean  @default(false)
  category           Category @relation(fields: [categoryId], references: [id])
  categoryId         Int
  company            Company  @relation(fields: [companyId], references: [id])
  companyId          Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Price              Price[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  image     String?
}

model Price {
  id         String   @id @default(cuid()) // O Int @id @default(autoincrement())
  productId  Int // Clave foránea para Product (o Int si usas IDs enteros)
  currencyId Int // Clave foránea para Currency (o Int si usas IDs enteros)
  value      Decimal  @db.Decimal(12, 2) // Precio. Usa Decimal para precisión monetaria (ajusta precisión y escala según necesites)
  isFixed    Boolean // TRUE si este precio es fijo para esta moneda. FALSE si es un equivalente calculado.
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relaciones
  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  currency Currency @relation(fields: [currencyId], references: [id], onDelete: Restrict) // Restrict para no borrar monedas en uso

  // Índice único para asegurar que solo hay un precio por producto y moneda
  @@unique([productId, currencyId])
}
